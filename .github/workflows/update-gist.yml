name: Update Gist with ISP Data

on:
  schedule:
    - cron: "0 0 * * *" # 每天凌晨 00:00 UTC 执行
  workflow_dispatch: # 手动触发

jobs:
  update-gist:
    runs-on: ubuntu-latest

    steps:
      - name: Fetch ISP data and update Gist
        env:
          GIST_TOKEN: ${{ secrets.GIST_TOKEN }}
        run: |
          # 定义变量
          GIST_ID="<your-gist-id>"
          ALL_CN_URL="https://ispip.clang.cn/all_cn.txt"
          ALL_CN_IPV6_URL="https://ispip.clang.cn/all_cn_ipv6.txt"
          ALL_CN_FILE="all_cn.txt"
          ALL_CN_IPV6_FILE="all_cn_ipv6.txt"

          # 下载 all_cn.txt
          if ! curl -o "$ALL_CN_FILE" "$ALL_CN_URL"; then
            echo "Failed to download $ALL_CN_FILE from $ALL_CN_URL"
            exit 1
          fi

          # 下载 all_cn_ipv6.txt
          if ! curl -o "$ALL_CN_IPV6_FILE" "$ALL_CN_IPV6_URL"; then
            echo "Failed to download $ALL_CN_IPV6_FILE from $ALL_CN_IPV6_URL"
            exit 1
          fi

          # 构建 API 请求体
          JSON_DATA=$(jq -n \
            --arg file1 "$ALL_CN_FILE" \
            --arg file2 "$ALL_CN_IPV6_FILE" \
            --arg content1 "$(cat $ALL_CN_FILE)" \
            --arg content2 "$(cat $ALL_CN_IPV6_FILE)" \
            '{files: {($file1): {content: $content1}, ($file2): {content: $content2}}}')

          # 更新 Gist
          RESPONSE=$(curl -s -o /dev/null -w "%{http_code}" -X PATCH \
            -H "Authorization: token $GIST_TOKEN" \
            -H "Accept: application/vnd.github.v3+json" \
            https://api.github.com/gists/$GIST_ID \
            -d "$JSON_DATA")

          # 检查 API 请求返回状态
          if [ "$RESPONSE" -ne 200 ]; then
            echo "Failed to update Gist, HTTP status: $RESPONSE"
            exit 1
          fi

          echo "Gist updated successfully!"
