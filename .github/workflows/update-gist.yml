name: Update Gist with ISP Data

on:
  schedule:
    - cron: "0 0 * * *"  # 每天凌晨 00:00 UTC 执行
  workflow_dispatch:

jobs:
  update-gist:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          # 确保换行符不被自动转换
          line-endings: 'input'
          
      - name: Configure Git
        run: |
          git config --global core.autocrlf false
          git config --global core.eol lf
          
      - name: Download ISP data
        run: |
          # 添加错误处理和重试机制
          for i in {1..3}; do
            if curl -f -o all_cn.txt https://ispip.clang.cn/all_cn.txt && \
               curl -f -o all_cn_ipv6.txt https://ispip.clang.cn/all_cn_ipv6.txt; then
              break
            fi
            echo "Attempt $i failed, retrying..."
            sleep 5
          done
          
          # 验证文件是否下载成功
          if [ ! -s all_cn.txt ] || [ ! -s all_cn_ipv6.txt ]; then
            echo "Failed to download ISP data files"
            exit 1
          fi

      - name: Update Gist
        env:
          GIST_TOKEN: ${{ secrets.GIST_TOKEN }}
          GIST_ID: ${{ secrets.GIST_ID }}
        run: |
          # 使用 awk 处理内容，保持换行符并正确转义 JSON 特殊字符
          IPV4_CONTENT=$(awk '{printf "%s\\n", $0}' all_cn.txt | sed 's/"/\\"/g')
          IPV6_CONTENT=$(awk '{printf "%s\\n", $0}' all_cn_ipv6.txt | sed 's/"/\\"/g')
          
          # 直接创建 JSON，使用处理好的内容
          cat > gist.json << EOF
          {
            "files": {
              "all_cn.txt": {
                "content": "${IPV4_CONTENT}"
              },
              "all_cn_ipv6.txt": {
                "content": "${IPV6_CONTENT}"
              }
            }
          }
          EOF
          
          # 更新 Gist
          RESPONSE=$(curl -sS -X PATCH \
            -H "Authorization: Bearer $GIST_TOKEN" \
            -H "Accept: application/vnd.github.v3+json" \
            -H "Content-Type: application/json" \
            "https://api.github.com/gists/$GIST_ID" \
            -d @gist.json)
          
          # 检查响应中是否包含错误信息
          if echo "$RESPONSE" | grep -q '"message":'; then
            echo "Error updating Gist: $RESPONSE"
            exit 1
          else
            echo "Gist updated successfully!"
          fi

      - name: Cleanup
        if: always()
        run: rm -f all_cn.txt all_cn_ipv6.txt gist.json
